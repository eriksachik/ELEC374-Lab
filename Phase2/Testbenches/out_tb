`timescale 1ns/10ps
module new_datapath_out_tb;

	reg HIin, HIout, LOin, LOout, PCin, PCout, IRin, Zin, Zhiout, Zloout, Yin, MARin, MDRin, MDRout, Read, Clock, GlobalReset, write;
	reg Gra, Grb, Grc, Rout, Rin, BAout, s_d_en, CONin, CONout, OUT_portin, Strobe, IN_portout, Cout;
	reg [4:0] ALUControl;

	wire [31:0] R6;
	
	initial begin
		Clock = 0;
		forever #10 Clock = ~Clock;
	end

	parameter Default = 4'b0000, Preload = 4'b0001, T0 = 4'b0010, T1 = 4'b0011, T2 = 4'b0100, T3 = 4'b0101, Done = 4'b0110;
	reg [3:0] Present_State = Default;

	new_datapath DUT(
		  .HIin(HIin), .HIout(HIout), .LOin(LOin), .LOout(LOout), .PCin(PCin), .PCout(PCout), 
		  .IRin(IRin), .Zin(Zin), .Zhiout(Zhiout), .Zloout(Zloout), .Yin(Yin), .MARin(MARin), 
		  .MDRin(MDRin), .MDRout(MDRout), .Read(Read), .Clock(Clock), .GlobalReset(GlobalReset),
		  .ALUControl(ALUControl),
		  .R6(R6), .Rout(Rout), .Rin(Rin), .Gra(Gra), .Grb(Grb), .Grc(Grc),
		  .OUT_portin(OUT_portin), .IN_portout(IN_portout)
	);

	always @(posedge Clock) begin
		case (Present_State)
			Default: Present_State = Preload;
			Preload: Present_State = T0;
			T0: Present_State = T1;
			T1: Present_State = T2;
			T2: Present_State = T3;
			T3: Present_State = Done;
			Done: Present_State = Done;
			default: Present_State = Default;
		endcase
	end

	always @(Present_State) begin
		case (Present_State)
			Default: begin
				HIin <= 0; HIout <= 0; LOin <= 0; LOout <= 0; PCin <= 0; PCout <= 0;
				IRin <= 0; Zin <= 0; Zhiout <= 0; Zloout <= 0; Yin <= 0; MARin <= 0;
				MDRin <= 0; MDRout <= 0; Read <= 0; GlobalReset <= 0; Clock <= 0;
				Gra <= 0; Grb <= 0; Grc <= 0; Rout <= 0; BAout <= 0; Rin <= 0;
				write <= 0; Cout <= 0; IN_portout <= 0; s_d_en <= 1; CONin <= 0; CONout <= 0; OUT_portin <= 0; Strobe <= 0;
			end

			Preload: begin
				// Preload R6 with 0x1111_2222
				force R6 = 32'h1111_2222;
			end

			T0: begin PCout <= 1; MARin <= 1; #15 PCout <= 0; MARin <= 0; end
			T1: begin Read <= 1; MDRin <= 1; #15 Read <= 0; MDRin <= 0; end
			T2: begin MDRout <= 1; IRin <= 1; #15 MDRout <= 0; IRin <= 0; end

			// OUT R6
			T3: begin
				Grc <= 1; Rout <= 1; OUT_portin <= 1; 
				#15 Grc <= 0; Rout <= 0; OUT_portin <= 0;
			end

			Done: begin end

			default: begin end
		endcase
	end

endmodule
