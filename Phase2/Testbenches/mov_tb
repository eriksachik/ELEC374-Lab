`timescale 1ns/10ps
module new_datapath_tb;

	reg HIin, HIout, LOin, LOout, PCin, PCout, IRin, Zin, Zhiout, Zloout, Yin, MARin, MDRin, MDRout, Read, Clock, GlobalReset, write;
	reg Gra, Grb, Grc, Rout, Rin, BAout, s_d_en, CONin, CONout, OUT_portin, Strobe, IN_portout, Cout;
	reg [4:0] ALUControl;
	
	wire Zero;
	wire [31:0] R0, R1, R2, R3, R4, R5, R6, R7, R8, R9, R10, R11, R12, R13, R14, R15;
	wire [31:0] HI, LO, IR, PC, BusMuxOut, Y;
	wire [63:0] Z;
	
	initial begin
		Clock = 0;
		forever #10 Clock = ~Clock;
	end

	parameter  Default = 4'b0000, Preload = 4'b0001, MFHI = 4'b0010, MFLO = 4'b0011, Done = 4'b0100;
	reg [3:0] Present_State = Default;

	new_datapath DUT(
		  .HIin(HIin), .HIout(HIout), .LOin(LOin), .LOout(LOout), .PCin(PCin), .PCout(PCout), 
		  .IRin(IRin), .Zin(Zin), .Zhiout(Zhiout), .Zloout(Zloout), .Yin(Yin), .MARin(MARin), 
		  .MDRin(MDRin), .MDRout(MDRout), .Read(Read), .Clock(Clock), .GlobalReset(GlobalReset),
		  .ALUControl(ALUControl),
		  .Zero(Zero), .R0(R0), .R1(R1), .R2(R2), .R3(R3), .HI(HI), .LO(LO), .IR(IR), .PC(PC), .BusMuxOut(BusMuxOut), .Z(Z), .Y(Y),
		  .R4(R4), .R5(R5), .R6(R6), .R7(R7), .R8(R8), .R9(R9), .R10(R10), .R11(R11), .R12(R12), .R13(R13), .R14(R14), .R15(R15),
		  .Cout(Cout), .write(write), .Gra(Gra), .Grb(Grb), .Grc(Grc), .Rout(Rout), .Rin(Rin), .BAout(BAout), .s_d_en(s_d_en), 
		  .CONin(CONin), .CONout(CONout), .OUT_portin(OUT_portin), .Strobe(Strobe), .IN_portout(IN_portout)
	);

	// State machine
	always @(posedge Clock) begin
		case (Present_State)
			Default: Present_State = Preload;
			Preload: Present_State = MFHI;
			MFHI:    Present_State = MFLO;
			MFLO:    Present_State = Done;
			Done:    Present_State = Done;
			default: Present_State = Default;
		endcase
	end

	// Control signals
	always @(Present_State) begin
		case (Present_State)

			// Reset state
			Default: begin
				HIin <= 0; HIout <= 0; LOin <= 0; LOout <= 0; 
				PCin <= 0; PCout <= 0; IRin <= 0; Zin <= 0; Zhiout <= 0; Zloout <= 0; Yin <= 0;
				MARin <= 0; MDRin <= 0; MDRout <= 0; Read <= 0; GlobalReset <= 0; Clock <= 0;
				Gra <= 0; Grb <= 0; Grc <= 0; Rout <= 0; BAout <= 0; Rin <= 0;
				write <= 0; Cout <= 0; IN_portout <= 0; s_d_en <= 1; CONin <= 0; CONout <= 0; OUT_portin <= 0; Strobe <= 0;
			end

			// Preload HI and LO with some values (e.g., HI = 0xAAAA_BBBB, LO = 0xCCCC_DDDD)
			Preload: begin
				HIin <= 1; LOin <= 1;
				// Assuming BusMux or another source is driving data to HI and LO (hardcoded for sim)
				force HI = 32'hAAAA_BBBB;
				force LO = 32'hCCCC_DDDD;
				#15 HIin <= 0; LOin <= 0;
			end

			// mfhi R3: HI -> R3
			MFHI: begin
				HIout <= 1; Gra <= 0; Grb <= 0; Grc <= 1; Rin <= 1; // Assuming R3 selected by Grc
				#15 HIout <= 0; Grc <= 0; Rin <= 0;
			end

			// mflo R2: LO -> R2
			MFLO: begin
				LOout <= 1; Gra <= 0; Grb <= 1; Grc <= 0; Rin <= 1; // Assuming R2 selected by Grb
				#15 LOout <= 0; Grb <= 0; Rin <= 0;
			end

			// Done state
			Done: begin
				// nothing, hold values
			end

			default: begin end
		endcase
	end

endmodule
